---
import "../styles/global.css";
---

{/* ================================== */}
{/* HTML Structure                     */}
{/* ================================== */}
<div class="container">
  <div class="sidebar" id="sidebar">
    <h2>Sidebar</h2>
    <div class="projects__container">
      <div>
        <slot name="pinned" />
      </div>
      <div>
        <slot name="recents" />
      </div>
    </div>
  </div>
  <div class="resizer" id="resizer"></div>
  <div class="main-content">
    <h1>Main Content</h1>
    <p>
      Drag the divider between the sidebar and this main content area to resize
      both sections.
    </p>
    <p>
      This is a responsive layout with a resizable sidebar implemented using
      vanilla HTML, CSS, and JavaScript.
    </p>
    <p>
      The sidebar has a minimum width to ensure usability, and the main content
      area will adjust accordingly.
    </p>
    <p>
      Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam auctor,
      nisl eget ultricies tincidunt, nisl nisl aliquam nisl, eget ultricies nisl
      nisl eget nisl. Nullam auctor, nisl eget ultricies tincidunt, nisl nisl
      aliquam nisl, eget ultricies nisl nisl eget nisl.
    </p>
    <p>
      Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam auctor,
      nisl eget ultricies tincidunt, nisl nisl aliquam nisl, eget ultricies nisl
      nisl eget nisl. Nullam auctor, nisl eget ultricies tincidunt, nisl nisl
      aliquam nisl, eget ultricies nisl nisl eget nisl.
    </p>
    <slot name="playground" />
  </div>
</div>
{/* ================================== */}
{/* Style                              */}
{/* ================================== */}
<style>
  :root {
    --fill-resizer-bg: rgba(0, 0, 0, 0.05);
    --resizer-radius: 20px;
  }
  .projects__container {
    display: grid;
    gap: 100px;
  }
  .container {
    display: flex;
    /* height: 600px; */
    /* overflow: hidden; */
    /* display: grid; */
    /* height: 100dvh; */
  }

  .sidebar {
    width: 800px;
    min-width: 150px;
    background-color: #f5f5f5;
    background-color: var(--fill-resizer-bg);
    border-radius: var(--resizer-radius);

    /* overflow-y: auto; */
    padding: 20px;
    box-sizing: border-box;
    border-right: 1px solid #e0e0e0;
  }

  .resizer {
    width: 20px;
    /* background-color: #e0e0e0; */
    cursor: col-resize;
    position: relative;
  }

  .resizer:hover,
  .resizer.active {
    /* background-color: #ccc; */

    &::after {
      background-color: red;
    }
  }

  .resizer::after {
    content: "";
    position: absolute;
    top: 400px;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 4px;
    height: 20px;
    background-color: #999;
    border-radius: 16px;
  }

  .main-content {
    flex: 1;
    /* overflow-y: auto; */
    padding: 20px;
    box-sizing: border-box;
    background-color: var(--fill-resizer-bg);
    border-radius: var(--resizer-radius);
  }

  h1,
  h2 {
    margin-top: 0;
  }

  .nav-item {
    padding: 10px 0;
    border-bottom: 1px solid #e0e0e0;
  }

  .nav-item:last-child {
    border-bottom: none;
  }

  @media (max-width: 768px) {
    .sidebar {
      width: 200px;
    }
  }
</style>

{/* ================================== */}
{/* Javascript                         */}
{/* ================================== */}
<script>
  document.addEventListener("DOMContentLoaded", function () {
    const resizer = document.getElementById("resizer");
    const sidebar = document.getElementById("sidebar");
    let isResizing = false;
    let lastDownX = 0;

    // Mouse down event on the resizer
    resizer.addEventListener("mousedown", function (e) {
      isResizing = true;
      lastDownX = e.clientX;
      resizer.classList.add("active");

      // Add a transparent overlay to prevent text selection during resize
      const overlay = document.createElement("div");
      overlay.style.position = "fixed";
      overlay.style.top = "0";
      overlay.style.left = "0";
      overlay.style.right = "0";
      overlay.style.bottom = "0";
      overlay.style.zIndex = "1000";
      overlay.style.cursor = "col-resize";
      overlay.id = "resize-overlay";
      document.body.appendChild(overlay);

      // Prevent text selection during resize
      document.body.style.userSelect = "none";
    });

    // Mouse move event to resize
    document.addEventListener("mousemove", function (e) {
      if (!isResizing) return;

      const offsetX = e.clientX - lastDownX;
      const newWidth = sidebar.offsetWidth + offsetX;

      // Set minimum width for sidebar
      if (newWidth >= 150 && newWidth <= window.innerWidth * 0.8) {
        sidebar.style.width = newWidth + "px";
        lastDownX = e.clientX;
      }
    });

    // Mouse up event to stop resizing
    document.addEventListener("mouseup", function () {
      if (isResizing) {
        isResizing = false;
        resizer.classList.remove("active");

        // Remove the overlay
        const overlay = document.getElementById("resize-overlay");
        if (overlay) {
          document.body.removeChild(overlay);
        }

        // Re-enable text selection
        document.body.style.userSelect = "";
      }
    });

    // Touch events for mobile support
    resizer.addEventListener("touchstart", function (e) {
      isResizing = true;
      lastDownX = e.touches[0].clientX;
      resizer.classList.add("active");
      document.body.style.userSelect = "none";
    });

    document.addEventListener("touchmove", function (e) {
      if (!isResizing) return;

      const offsetX = e.touches[0].clientX - lastDownX;
      const newWidth = sidebar.offsetWidth + offsetX;

      if (newWidth >= 150 && newWidth <= window.innerWidth * 0.8) {
        sidebar.style.width = newWidth + "px";
        lastDownX = e.touches[0].clientX;
      }
    });

    document.addEventListener("touchend", function () {
      if (isResizing) {
        isResizing = false;
        resizer.classList.remove("active");
        document.body.style.userSelect = "";
      }
    });
  });
</script>
